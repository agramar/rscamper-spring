<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- AOP 설정을 통한 자동적인 Proxy 객체 생성 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- DataSource 추가 : JDBC 커넥션 처리 기능 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="url" value="jdbc:mysql://192.168.0.9:3306/rscamper"></property>
		<property name="username" value="rscamper"></property>
		<property name="password" value="rscamper123"></property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
		<!-- mybatis-config.xml 파일이 스프링이 동작할 때 같이 동작하도록 설정 -->
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>

		<!-- XML Mapper 인식 설정 -->
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
	</bean>

	<!-- 데이터베이스 자원 관리, 자동 연결/종료 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"	destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<!-- 트랜잭션 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- @Transactional 애노테이션 트랜잭션 관리 -->
	<tx:annotation-driven />

	<context:component-scan base-package="kr.co.rscamper.persistence"></context:component-scan>
	<context:component-scan base-package="kr.co.rscamper.service"></context:component-scan>
	<context:component-scan base-package="kr.co.rscamper.aop"></context:component-scan>
</beans>
